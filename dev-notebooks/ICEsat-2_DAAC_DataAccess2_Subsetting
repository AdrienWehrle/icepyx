{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Subsetting ICESat-2 Data with the NSIDC Subsetter\n",
    "### How to Use the NSIDC Subsetter Example Notebook\n",
    "This notebook illustrates the use of icepyx for subsetting ICESat-2 data ordered through the NSIDC DAAC. We'll show how to find out what subsetting options are available and how to specify the subsetting for your order.\n",
    "\n",
    "For more information on using icepyx to find, order, and download data, see our complimentary [ICESat-2_DAAC_DataAccess_Example Notebook](https://github.com/icesat2py/icepyx/blob/master/doc/examples/ICESat-2_DAAC_DataAccess_Example.ipynb).\n",
    "\n",
    "Questions? Be sure to check out the FAQs throughout this notebook, indicated as italic headings.\n",
    "\n",
    "#### Credits\n",
    "* notebook by: Jessica Scheick and Zheng Liu\n",
    "* some source material: [NSIDC Data Access Notebook](https://github.com/ICESAT-2HackWeek/ICESat2_hackweek_tutorials/tree/master/03_NSIDCDataAccess_Steiker) by Amy Steiker and Bruce Wallin"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### _What is SUBSETTING anyway?_\n",
    "\n",
    "Anyone who's worked with geospatial data has probably encountered subsetting. Typically, we search for data wherever it is stored and download the chunks (aka granules, scenes, passes, swaths, etc.) that contain something we are interested in. Then, we have to extract from each chunk the pieces we actually want to analyze. Those pieces might be geospatial (i.e. an area of interest), temporal (i.e. certain months of a time series), and/or certain variables. This process of extracting the data we are going to use is called subsetting.\n",
    "\n",
    "In the case of ICESat-2 data coming from the NSIDC DAAC, we can do this subsetting step on the data prior to download, reducing our number of data processing steps and resulting in smaller, faster downloads and storage."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import packages, including icepyx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import xarray as xr\n",
    "import pandas as pd\n",
    "\n",
    "import h5py\n",
    "import os,json\n",
    "from pprint import pprint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/jovyan/icepyx\n"
     ]
    }
   ],
   "source": [
    "#change working directory\n",
    "%cd ../"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "from icepyx import icesat2data as ipd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create an icesat2data object and log in to Earthdata\n",
    "\n",
    "For this example, we'll be working with a sea ice dataset (ATL09) for an area along West Greenland (Disko Bay)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/jovyan/icepyx/icepyx/core/icesat2data.py:117: UserWarning: Please note: as of 2020-05-05, a major reorganization of the core icepyx code may result in errors produced by now depricated functions. Please see our documentation pages or example notebooks for updates.\n",
      "  warnings.warn(\"Please note: as of 2020-05-05, a major reorganization of the core icepyx code may result in errors produced by now depricated functions. Please see our documentation pages or example notebooks for updates.\")\n"
     ]
    }
   ],
   "source": [
    "region_a = ipd.Icesat2Data('ATL09',[-55, 68, -48, 71],['2019-02-22','2019-02-28'], \\\n",
    "                           start_time='00:00:00', end_time='23:59:59')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "region_a.earthdata_login('liuzheng','liuzheng@apl.uw.edu')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Earthdata Login password:  ········\n"
     ]
    }
   ],
   "source": [
    "region_a.earthdata_login('jessica.scheick','jessica.scheick@maine.edu')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Discover Subsetting Options\n",
    "\n",
    "You can see what subsetting options are available for a given dataset by calling `show_custom_options()`. The options are presented as a series of headings followed by available values in square brackets. Headings are:\n",
    "* **Subsetting Options**: whether or not temporal and spatial subsetting are available for the dataset\n",
    "* **Data File Formats (Reformatting Options)**: return the data in a format other than the native hdf5 (submitted as a key=value kwarg to `order_granules(format='NetCDF4-CF')`)\n",
    "* **Data File (Reformatting) Options Supporting Reprojection**: return the data in a reprojected reference frame. These will be available for gridded ICESat-2 L3B datasets.\n",
    "* **Data File (Reformatting) Options NOT Supporting Reprojection**: data file formats that cannot be delivered with reprojection\n",
    "* **Data Variables (also Subsettable)**: a dictionary of variable name keys and the paths to those variables available in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Subsetting options\n",
      "[{'id': 'ICESAT2',\n",
      "  'maxGransAsyncRequest': '2000',\n",
      "  'maxGransSyncRequest': '100',\n",
      "  'spatialSubsetting': 'true',\n",
      "  'spatialSubsettingShapefile': 'true',\n",
      "  'temporalSubsetting': 'true',\n",
      "  'type': 'both'}]\n",
      "Data File Formats (Reformatting Options)\n",
      "['TABULAR_ASCII', 'NetCDF4-CF', 'NetCDF-3']\n",
      "Reprojection Options\n",
      "[]\n",
      "Data File (Reformatting) Options Supporting Reprojection\n",
      "['TABULAR_ASCII', 'NetCDF4-CF', 'NetCDF-3', 'No reformatting']\n",
      "Data File (Reformatting) Options NOT Supporting Reprojection\n",
      "[]\n",
      "Data Variables (also Subsettable)\n",
      "{'a_m1': ['ancillary_data/atmosphere/a_m1'],\n",
      " 'a_m2': ['ancillary_data/atmosphere/a_m2'],\n",
      " 'aclr_true': ['profile_1/high_rate/aclr_true',\n",
      "               'profile_2/high_rate/aclr_true',\n",
      "               'profile_3/high_rate/aclr_true'],\n",
      " 'aclr_use_atlas': ['ancillary_data/atmosphere/aclr_use_atlas'],\n",
      " 'alpha_day_pce1': ['ancillary_data/atmosphere/alpha_day_pce1'],\n",
      " 'alpha_day_pce2': ['ancillary_data/atmosphere/alpha_day_pce2'],\n",
      " 'alpha_day_pce3': ['ancillary_data/atmosphere/alpha_day_pce3'],\n",
      " 'alpha_night_pce1': ['ancillary_data/atmosphere/alpha_night_pce1'],\n",
      " 'alpha_night_pce2': ['ancillary_data/atmosphere/alpha_night_pce2'],\n",
      " 'alpha_night_pce3': ['ancillary_data/atmosphere/alpha_night_pce3'],\n",
      " 'alpha_twilight_pce1': ['ancillary_data/atmosphere/alpha_twilight_pce1'],\n",
      " 'alpha_twilight_pce2': ['ancillary_data/atmosphere/alpha_twilight_pce2'],\n",
      " 'alpha_twilight_pce3': ['ancillary_data/atmosphere/alpha_twilight_pce3'],\n",
      " 'apparent_surf_reflec': ['profile_1/high_rate/apparent_surf_reflec',\n",
      "                          'profile_2/high_rate/apparent_surf_reflec',\n",
      "                          'profile_3/high_rate/apparent_surf_reflec'],\n",
      " 'asr_avg': ['quality_assessment/profile_1/asr_avg',\n",
      "             'quality_assessment/profile_2/asr_avg',\n",
      "             'quality_assessment/profile_3/asr_avg'],\n",
      " 'asr_cal_factor': ['ancillary_data/atmosphere/asr_cal_factor'],\n",
      " 'asr_cloud_probability': ['profile_1/high_rate/asr_cloud_probability',\n",
      "                           'profile_2/high_rate/asr_cloud_probability',\n",
      "                           'profile_3/high_rate/asr_cloud_probability'],\n",
      " 'asr_max': ['quality_assessment/profile_1/asr_max',\n",
      "             'quality_assessment/profile_2/asr_max',\n",
      "             'quality_assessment/profile_3/asr_max'],\n",
      " 'asr_min': ['quality_assessment/profile_1/asr_min',\n",
      "             'quality_assessment/profile_2/asr_min',\n",
      "             'quality_assessment/profile_3/asr_min'],\n",
      " 'asr_std': ['quality_assessment/profile_1/asr_std',\n",
      "             'quality_assessment/profile_2/asr_std',\n",
      "             'quality_assessment/profile_3/asr_std'],\n",
      " 'atlas_bandpass_fw': ['ancillary_data/atmosphere/atlas_bandpass_fw'],\n",
      " 'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'atlas_tele_fov': ['ancillary_data/atmosphere/atlas_tele_fov'],\n",
      " 'backg_c': ['profile_1/high_rate/backg_c',\n",
      "             'profile_2/high_rate/backg_c',\n",
      "             'profile_3/high_rate/backg_c'],\n",
      " 'backg_max_solar_elev': ['ancillary_data/atmosphere/backg_max_solar_elev'],\n",
      " 'backg_min_solar_elev': ['ancillary_data/atmosphere/backg_min_solar_elev'],\n",
      " 'backg_select': ['ancillary_data/atmosphere/backg_select'],\n",
      " 'backg_theoret': ['profile_1/high_rate/backg_theoret',\n",
      "                   'profile_2/high_rate/backg_theoret',\n",
      "                   'profile_3/high_rate/backg_theoret'],\n",
      " 'bckgrd_counts': ['profile_1/bckgrd_atlas/bckgrd_counts',\n",
      "                   'profile_2/bckgrd_atlas/bckgrd_counts',\n",
      "                   'profile_3/bckgrd_atlas/bckgrd_counts'],\n",
      " 'bckgrd_counts_reduced': ['profile_1/bckgrd_atlas/bckgrd_counts_reduced',\n",
      "                           'profile_2/bckgrd_atlas/bckgrd_counts_reduced',\n",
      "                           'profile_3/bckgrd_atlas/bckgrd_counts_reduced'],\n",
      " 'bckgrd_hist_top': ['profile_1/bckgrd_atlas/bckgrd_hist_top',\n",
      "                     'profile_2/bckgrd_atlas/bckgrd_hist_top',\n",
      "                     'profile_3/bckgrd_atlas/bckgrd_hist_top'],\n",
      " 'bckgrd_int_height': ['profile_1/bckgrd_atlas/bckgrd_int_height',\n",
      "                       'profile_2/bckgrd_atlas/bckgrd_int_height',\n",
      "                       'profile_3/bckgrd_atlas/bckgrd_int_height'],\n",
      " 'bckgrd_int_height_reduced': ['profile_1/bckgrd_atlas/bckgrd_int_height_reduced',\n",
      "                               'profile_2/bckgrd_atlas/bckgrd_int_height_reduced',\n",
      "                               'profile_3/bckgrd_atlas/bckgrd_int_height_reduced'],\n",
      " 'bckgrd_rate': ['profile_1/bckgrd_atlas/bckgrd_rate',\n",
      "                 'profile_2/bckgrd_atlas/bckgrd_rate',\n",
      "                 'profile_3/bckgrd_atlas/bckgrd_rate'],\n",
      " 'beam_azimuth': ['profile_1/high_rate/beam_azimuth',\n",
      "                  'profile_2/high_rate/beam_azimuth',\n",
      "                  'profile_3/high_rate/beam_azimuth'],\n",
      " 'beam_elevation': ['profile_1/high_rate/beam_elevation',\n",
      "                    'profile_2/high_rate/beam_elevation',\n",
      "                    'profile_3/high_rate/beam_elevation'],\n",
      " 'bs_extinc_backs': ['ancillary_data/atmosphere/bs_extinc_backs'],\n",
      " 'bs_lay_max_size': ['ancillary_data/atmosphere/bs_lay_max_size'],\n",
      " 'bs_thresh_scale': ['ancillary_data/atmosphere/bs_thresh_scale'],\n",
      " 'bs_top_scale': ['ancillary_data/atmosphere/bs_top_scale'],\n",
      " 'bs_wind_thres': ['ancillary_data/atmosphere/bs_wind_thres'],\n",
      " 'bsnow_con': ['profile_1/high_rate/bsnow_con',\n",
      "               'profile_1/low_rate/bsnow_con',\n",
      "               'profile_2/high_rate/bsnow_con',\n",
      "               'profile_2/low_rate/bsnow_con',\n",
      "               'profile_3/high_rate/bsnow_con',\n",
      "               'profile_3/low_rate/bsnow_con'],\n",
      " 'bsnow_dens': ['profile_1/high_rate/bsnow_dens',\n",
      "                'profile_2/high_rate/bsnow_dens',\n",
      "                'profile_3/high_rate/bsnow_dens'],\n",
      " 'bsnow_h': ['profile_1/high_rate/bsnow_h',\n",
      "             'profile_1/low_rate/bsnow_h',\n",
      "             'profile_2/high_rate/bsnow_h',\n",
      "             'profile_2/low_rate/bsnow_h',\n",
      "             'profile_3/high_rate/bsnow_h',\n",
      "             'profile_3/low_rate/bsnow_h'],\n",
      " 'bsnow_h_dens': ['profile_1/high_rate/bsnow_h_dens',\n",
      "                  'profile_2/high_rate/bsnow_h_dens',\n",
      "                  'profile_3/high_rate/bsnow_h_dens'],\n",
      " 'bsnow_intensity': ['profile_1/high_rate/bsnow_intensity',\n",
      "                     'profile_1/low_rate/bsnow_intensity',\n",
      "                     'profile_2/high_rate/bsnow_intensity',\n",
      "                     'profile_2/low_rate/bsnow_intensity',\n",
      "                     'profile_3/high_rate/bsnow_intensity',\n",
      "                     'profile_3/low_rate/bsnow_intensity'],\n",
      " 'bsnow_od': ['profile_1/high_rate/bsnow_od',\n",
      "              'profile_1/low_rate/bsnow_od',\n",
      "              'profile_2/high_rate/bsnow_od',\n",
      "              'profile_2/low_rate/bsnow_od',\n",
      "              'profile_3/high_rate/bsnow_od',\n",
      "              'profile_3/low_rate/bsnow_od'],\n",
      " 'bsnow_prob': ['profile_1/low_rate/bsnow_prob',\n",
      "                'profile_2/low_rate/bsnow_prob',\n",
      "                'profile_3/low_rate/bsnow_prob'],\n",
      " 'bsnow_psc': ['profile_1/high_rate/bsnow_psc',\n",
      "               'profile_1/low_rate/bsnow_psc',\n",
      "               'profile_2/high_rate/bsnow_psc',\n",
      "               'profile_2/low_rate/bsnow_psc',\n",
      "               'profile_3/high_rate/bsnow_psc',\n",
      "               'profile_3/low_rate/bsnow_psc'],\n",
      " 'cab_mol_avg': ['quality_assessment/profile_1/cab_mol_avg',\n",
      "                 'quality_assessment/profile_2/cab_mol_avg',\n",
      "                 'quality_assessment/profile_3/cab_mol_avg'],\n",
      " 'cab_prof': ['profile_1/high_rate/cab_prof',\n",
      "              'profile_2/high_rate/cab_prof',\n",
      "              'profile_3/high_rate/cab_prof'],\n",
      " 'cal_bot_ht': ['ancillary_data/atmosphere/cal_bot_ht'],\n",
      " 'cal_c': ['profile_1/low_rate/cal_c',\n",
      "           'profile_2/low_rate/cal_c',\n",
      "           'profile_3/low_rate/cal_c'],\n",
      " 'cal_default': ['ancillary_data/atmosphere/cal_default'],\n",
      " 'cal_lat_bound': ['ancillary_data/atmosphere/cal_lat_bound'],\n",
      " 'cal_select': ['ancillary_data/atmosphere/cal_select'],\n",
      " 'cal_top_ht': ['ancillary_data/atmosphere/cal_top_ht'],\n",
      " 'cld_asr_pct': ['quality_assessment/profile_1/cld_asr_pct',\n",
      "                 'quality_assessment/profile_2/cld_asr_pct',\n",
      "                 'quality_assessment/profile_3/cld_asr_pct'],\n",
      " 'cld_avg': ['quality_assessment/profile_1/cld_avg',\n",
      "             'quality_assessment/profile_2/cld_avg',\n",
      "             'quality_assessment/profile_3/cld_avg'],\n",
      " 'cld_max': ['quality_assessment/profile_1/cld_max',\n",
      "             'quality_assessment/profile_2/cld_max',\n",
      "             'quality_assessment/profile_3/cld_max'],\n",
      " 'cld_min': ['quality_assessment/profile_1/cld_min',\n",
      "             'quality_assessment/profile_2/cld_min',\n",
      "             'quality_assessment/profile_3/cld_min'],\n",
      " 'cld_pct': ['quality_assessment/profile_1/cld_pct',\n",
      "             'quality_assessment/profile_2/cld_pct',\n",
      "             'quality_assessment/profile_3/cld_pct'],\n",
      " 'cloud_flag_asr': ['profile_1/high_rate/cloud_flag_asr',\n",
      "                    'profile_2/high_rate/cloud_flag_asr',\n",
      "                    'profile_3/high_rate/cloud_flag_asr'],\n",
      " 'cloud_flag_atm': ['profile_1/high_rate/cloud_flag_atm',\n",
      "                    'profile_2/high_rate/cloud_flag_atm',\n",
      "                    'profile_3/high_rate/cloud_flag_atm'],\n",
      " 'cloud_fold_flag': ['profile_1/high_rate/cloud_fold_flag',\n",
      "                     'profile_2/high_rate/cloud_fold_flag',\n",
      "                     'profile_3/high_rate/cloud_fold_flag'],\n",
      " 'cod_avg': ['quality_assessment/profile_1/cod_avg',\n",
      "             'quality_assessment/profile_2/cod_avg',\n",
      "             'quality_assessment/profile_3/cod_avg'],\n",
      " 'cod_max': ['quality_assessment/profile_1/cod_max',\n",
      "             'quality_assessment/profile_2/cod_max',\n",
      "             'quality_assessment/profile_3/cod_max'],\n",
      " 'cod_min': ['quality_assessment/profile_1/cod_min',\n",
      "             'quality_assessment/profile_2/cod_min',\n",
      "             'quality_assessment/profile_3/cod_min'],\n",
      " 'column_od_asr': ['profile_1/high_rate/column_od_asr',\n",
      "                   'profile_2/high_rate/column_od_asr',\n",
      "                   'profile_3/high_rate/column_od_asr'],\n",
      " 'column_od_asr_qf': ['profile_1/high_rate/column_od_asr_qf',\n",
      "                      'profile_2/high_rate/column_od_asr_qf',\n",
      "                      'profile_3/high_rate/column_od_asr_qf'],\n",
      " 'control': ['ancillary_data/control'],\n",
      " 'crossing_time': ['orbit_info/crossing_time'],\n",
      " 'cutoff1': ['ancillary_data/atmosphere/cutoff1'],\n",
      " 'cutoff2': ['ancillary_data/atmosphere/cutoff2'],\n",
      " 'cycle_number': ['orbit_info/cycle_number'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'delta_time': ['profile_1/bckgrd_atlas/delta_time',\n",
      "                'profile_1/high_rate/delta_time',\n",
      "                'profile_1/low_rate/delta_time',\n",
      "                'profile_2/bckgrd_atlas/delta_time',\n",
      "                'profile_2/high_rate/delta_time',\n",
      "                'profile_2/low_rate/delta_time',\n",
      "                'profile_3/bckgrd_atlas/delta_time',\n",
      "                'profile_3/high_rate/delta_time',\n",
      "                'profile_3/low_rate/delta_time',\n",
      "                'quality_assessment/profile_1/delta_time',\n",
      "                'quality_assessment/profile_2/delta_time',\n",
      "                'quality_assessment/profile_3/delta_time'],\n",
      " 'dem_flag': ['profile_1/high_rate/dem_flag',\n",
      "              'profile_2/high_rate/dem_flag',\n",
      "              'profile_3/high_rate/dem_flag'],\n",
      " 'dem_h': ['profile_1/high_rate/dem_h',\n",
      "           'profile_2/high_rate/dem_h',\n",
      "           'profile_3/high_rate/dem_h'],\n",
      " 'density_pass1': ['profile_1/high_rate/density_pass1',\n",
      "                   'profile_2/high_rate/density_pass1',\n",
      "                   'profile_3/high_rate/density_pass1'],\n",
      " 'density_pass2': ['profile_1/high_rate/density_pass2',\n",
      "                   'profile_2/high_rate/density_pass2',\n",
      "                   'profile_3/high_rate/density_pass2'],\n",
      " 'detector_efficiency': ['ancillary_data/atmosphere/detector_efficiency'],\n",
      " 'downsample1': ['ancillary_data/atmosphere/downsample1'],\n",
      " 'downsample2': ['ancillary_data/atmosphere/downsample2'],\n",
      " 'ds_layers': ['profile_1/high_rate/ds_layers',\n",
      "               'profile_2/high_rate/ds_layers',\n",
      "               'profile_3/high_rate/ds_layers'],\n",
      " 'ds_surf_type': ['ds_surf_type'],\n",
      " 'ds_va_bin_h': ['profile_1/high_rate/ds_va_bin_h',\n",
      "                 'profile_1/low_rate/ds_va_bin_h',\n",
      "                 'profile_2/high_rate/ds_va_bin_h',\n",
      "                 'profile_2/low_rate/ds_va_bin_h',\n",
      "                 'profile_3/high_rate/ds_va_bin_h',\n",
      "                 'profile_3/low_rate/ds_va_bin_h'],\n",
      " 'dtime_fac1': ['profile_1/high_rate/dtime_fac1',\n",
      "                'profile_2/high_rate/dtime_fac1',\n",
      "                'profile_3/high_rate/dtime_fac1'],\n",
      " 'dtime_fac2': ['profile_1/high_rate/dtime_fac2',\n",
      "                'profile_2/high_rate/dtime_fac2',\n",
      "                'profile_3/high_rate/dtime_fac2'],\n",
      " 'dtime_select': ['ancillary_data/atmosphere/dtime_select'],\n",
      " 'end_cycle': ['ancillary_data/end_cycle'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'end_geoseg': ['ancillary_data/end_geoseg'],\n",
      " 'end_gpssow': ['ancillary_data/end_gpssow'],\n",
      " 'end_gpsweek': ['ancillary_data/end_gpsweek'],\n",
      " 'end_orbit': ['ancillary_data/end_orbit'],\n",
      " 'end_region': ['ancillary_data/end_region'],\n",
      " 'end_rgt': ['ancillary_data/end_rgt'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'grd_search_width': ['ancillary_data/atmosphere/grd_search_width'],\n",
      " 'lan': ['orbit_info/lan'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_2/high_rate/latitude',\n",
      "              'profile_2/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude'],\n",
      " 'layer_attr': ['profile_1/high_rate/layer_attr',\n",
      "                'profile_2/high_rate/layer_attr',\n",
      "                'profile_3/high_rate/layer_attr'],\n",
      " 'layer_bot': ['profile_1/high_rate/layer_bot',\n",
      "               'profile_2/high_rate/layer_bot',\n",
      "               'profile_3/high_rate/layer_bot'],\n",
      " 'layer_con': ['profile_1/high_rate/layer_con',\n",
      "               'profile_2/high_rate/layer_con',\n",
      "               'profile_3/high_rate/layer_con'],\n",
      " 'layer_conf_dens': ['profile_1/high_rate/layer_conf_dens',\n",
      "                     'profile_2/high_rate/layer_conf_dens',\n",
      "                     'profile_3/high_rate/layer_conf_dens'],\n",
      " 'layer_dens': ['profile_1/high_rate/layer_dens',\n",
      "                'profile_2/high_rate/layer_dens',\n",
      "                'profile_3/high_rate/layer_dens'],\n",
      " 'layer_flag': ['profile_1/high_rate/layer_flag',\n",
      "                'profile_2/high_rate/layer_flag',\n",
      "                'profile_3/high_rate/layer_flag'],\n",
      " 'layer_flag_cp1': ['ancillary_data/atmosphere/layer_flag_cp1'],\n",
      " 'layer_flag_cp2': ['ancillary_data/atmosphere/layer_flag_cp2'],\n",
      " 'layer_ib': ['profile_1/high_rate/layer_ib',\n",
      "              'profile_2/high_rate/layer_ib',\n",
      "              'profile_3/high_rate/layer_ib'],\n",
      " 'layer_sep': ['ancillary_data/atmosphere/layer_sep'],\n",
      " 'layer_thick': ['ancillary_data/atmosphere/layer_thick'],\n",
      " 'layer_top': ['profile_1/high_rate/layer_top',\n",
      "               'profile_2/high_rate/layer_top',\n",
      "               'profile_3/high_rate/layer_top'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_1/low_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_2/low_rate/longitude',\n",
      "               'profile_3/high_rate/longitude',\n",
      "               'profile_3/low_rate/longitude'],\n",
      " 'lr_bsnow_fac': ['ancillary_data/atmosphere/lr_bsnow_fac'],\n",
      " 'max_layers': ['ancillary_data/atmosphere/max_layers'],\n",
      " 'met_cldprs': ['profile_1/low_rate/met_cldprs',\n",
      "                'profile_2/low_rate/met_cldprs',\n",
      "                'profile_3/low_rate/met_cldprs'],\n",
      " 'met_ps': ['profile_1/low_rate/met_ps',\n",
      "            'profile_2/low_rate/met_ps',\n",
      "            'profile_3/low_rate/met_ps'],\n",
      " 'met_qv10m': ['profile_1/low_rate/met_qv10m',\n",
      "               'profile_2/low_rate/met_qv10m',\n",
      "               'profile_3/low_rate/met_qv10m'],\n",
      " 'met_qv2m': ['profile_1/low_rate/met_qv2m',\n",
      "              'profile_2/low_rate/met_qv2m',\n",
      "              'profile_3/low_rate/met_qv2m'],\n",
      " 'met_slp': ['profile_1/low_rate/met_slp',\n",
      "             'profile_2/low_rate/met_slp',\n",
      "             'profile_3/low_rate/met_slp'],\n",
      " 'met_t10m': ['profile_1/low_rate/met_t10m',\n",
      "              'profile_2/low_rate/met_t10m',\n",
      "              'profile_3/low_rate/met_t10m'],\n",
      " 'met_t2m': ['profile_1/low_rate/met_t2m',\n",
      "             'profile_2/low_rate/met_t2m',\n",
      "             'profile_3/low_rate/met_t2m'],\n",
      " 'met_tqi': ['profile_1/low_rate/met_tqi',\n",
      "             'profile_2/low_rate/met_tqi',\n",
      "             'profile_3/low_rate/met_tqi'],\n",
      " 'met_tql': ['profile_1/low_rate/met_tql',\n",
      "             'profile_2/low_rate/met_tql',\n",
      "             'profile_3/low_rate/met_tql'],\n",
      " 'met_troppb': ['profile_1/low_rate/met_troppb',\n",
      "                'profile_2/low_rate/met_troppb',\n",
      "                'profile_3/low_rate/met_troppb'],\n",
      " 'met_tropt': ['profile_1/low_rate/met_tropt',\n",
      "               'profile_2/low_rate/met_tropt',\n",
      "               'profile_3/low_rate/met_tropt'],\n",
      " 'met_ts': ['profile_1/low_rate/met_ts',\n",
      "            'profile_2/low_rate/met_ts',\n",
      "            'profile_3/low_rate/met_ts'],\n",
      " 'met_u10m': ['profile_1/low_rate/met_u10m',\n",
      "              'profile_2/low_rate/met_u10m',\n",
      "              'profile_3/low_rate/met_u10m'],\n",
      " 'met_u2m': ['profile_1/low_rate/met_u2m',\n",
      "             'profile_2/low_rate/met_u2m',\n",
      "             'profile_3/low_rate/met_u2m'],\n",
      " 'met_u50m': ['profile_1/low_rate/met_u50m',\n",
      "              'profile_2/low_rate/met_u50m',\n",
      "              'profile_3/low_rate/met_u50m'],\n",
      " 'met_v10m': ['profile_1/low_rate/met_v10m',\n",
      "              'profile_2/low_rate/met_v10m',\n",
      "              'profile_3/low_rate/met_v10m'],\n",
      " 'met_v2m': ['profile_1/low_rate/met_v2m',\n",
      "             'profile_2/low_rate/met_v2m',\n",
      "             'profile_3/low_rate/met_v2m'],\n",
      " 'met_v50m': ['profile_1/low_rate/met_v50m',\n",
      "              'profile_2/low_rate/met_v50m',\n",
      "              'profile_3/low_rate/met_v50m'],\n",
      " 'mol_backs_folded': ['profile_1/low_rate/mol_backs_folded',\n",
      "                      'profile_2/low_rate/mol_backs_folded',\n",
      "                      'profile_3/low_rate/mol_backs_folded'],\n",
      " 'mol_backscatter': ['profile_1/low_rate/mol_backscatter',\n",
      "                     'profile_2/low_rate/mol_backscatter',\n",
      "                     'profile_3/low_rate/mol_backscatter'],\n",
      " 'molec_bkscat_p': ['profile_1/low_rate/molec_bkscat_p',\n",
      "                    'profile_2/low_rate/molec_bkscat_p',\n",
      "                    'profile_3/low_rate/molec_bkscat_p'],\n",
      " 'molec_bkscat_rh': ['profile_1/low_rate/molec_bkscat_rh',\n",
      "                     'profile_2/low_rate/molec_bkscat_rh',\n",
      "                     'profile_3/low_rate/molec_bkscat_rh'],\n",
      " 'molec_bkscat_t': ['profile_1/low_rate/molec_bkscat_t',\n",
      "                    'profile_2/low_rate/molec_bkscat_t',\n",
      "                    'profile_3/low_rate/molec_bkscat_t'],\n",
      " 'molec_trans': ['profile_1/low_rate/molec_trans',\n",
      "                 'profile_2/low_rate/molec_trans',\n",
      "                 'profile_3/low_rate/molec_trans'],\n",
      " 'msw_flag': ['profile_1/high_rate/msw_flag',\n",
      "              'profile_2/high_rate/msw_flag',\n",
      "              'profile_3/high_rate/msw_flag'],\n",
      " 'neighborhood1': ['ancillary_data/atmosphere/neighborhood1'],\n",
      " 'neighborhood2': ['ancillary_data/atmosphere/neighborhood2'],\n",
      " 'normalization1': ['ancillary_data/atmosphere/normalization1'],\n",
      " 'normalization2': ['ancillary_data/atmosphere/normalization2'],\n",
      " 'num_passes': ['ancillary_data/atmosphere/num_passes'],\n",
      " 'ocean_surf_reflec': ['profile_1/high_rate/ocean_surf_reflec',\n",
      "                       'profile_2/high_rate/ocean_surf_reflec',\n",
      "                       'profile_3/high_rate/ocean_surf_reflec'],\n",
      " 'orbit_number': ['orbit_info/orbit_number'],\n",
      " 'osr_avg': ['quality_assessment/profile_1/osr_avg',\n",
      "             'quality_assessment/profile_2/osr_avg',\n",
      "             'quality_assessment/profile_3/osr_avg'],\n",
      " 'osr_max': ['quality_assessment/profile_1/osr_max',\n",
      "             'quality_assessment/profile_2/osr_max',\n",
      "             'quality_assessment/profile_3/osr_max'],\n",
      " 'osr_min': ['quality_assessment/profile_1/osr_min',\n",
      "             'quality_assessment/profile_2/osr_min',\n",
      "             'quality_assessment/profile_3/osr_min'],\n",
      " 'pce_mframe_cnt': ['profile_1/bckgrd_atlas/pce_mframe_cnt',\n",
      "                    'profile_1/high_rate/pce_mframe_cnt',\n",
      "                    'profile_2/bckgrd_atlas/pce_mframe_cnt',\n",
      "                    'profile_2/high_rate/pce_mframe_cnt',\n",
      "                    'profile_3/bckgrd_atlas/pce_mframe_cnt',\n",
      "                    'profile_3/high_rate/pce_mframe_cnt'],\n",
      " 'phi_land': ['ancillary_data/atmosphere/phi_land'],\n",
      " 'phi_ocean': ['ancillary_data/atmosphere/phi_ocean'],\n",
      " 'planck_const': ['ancillary_data/atmosphere/planck_const'],\n",
      " 'proc_interval': ['ancillary_data/atmosphere/proc_interval'],\n",
      " 'prof_dist_x': ['profile_1/high_rate/prof_dist_x',\n",
      "                 'profile_2/high_rate/prof_dist_x',\n",
      "                 'profile_3/high_rate/prof_dist_x'],\n",
      " 'prof_dist_y': ['profile_1/high_rate/prof_dist_y',\n",
      "                 'profile_2/high_rate/prof_dist_y',\n",
      "                 'profile_3/high_rate/prof_dist_y'],\n",
      " 'qa_at_interval': ['ancillary_data/qa_at_interval'],\n",
      " 'qa_granule_fail_reason': ['quality_assessment/qa_granule_fail_reason'],\n",
      " 'qa_granule_pass_fail': ['quality_assessment/qa_granule_pass_fail'],\n",
      " 'quantile1': ['ancillary_data/atmosphere/quantile1'],\n",
      " 'quantile2': ['ancillary_data/atmosphere/quantile2'],\n",
      " 'range_to_top': ['profile_1/high_rate/range_to_top',\n",
      "                  'profile_2/high_rate/range_to_top',\n",
      "                  'profile_3/high_rate/range_to_top'],\n",
      " 'receiver_optical_throughput': ['ancillary_data/atmosphere/receiver_optical_throughput'],\n",
      " 'release': ['ancillary_data/release'],\n",
      " 'rgt': ['orbit_info/rgt'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'sc_orient_time': ['orbit_info/sc_orient_time'],\n",
      " 'segment_id': ['profile_1/high_rate/segment_id',\n",
      "                'profile_2/high_rate/segment_id',\n",
      "                'profile_3/high_rate/segment_id'],\n",
      " 'sig_count_hi': ['profile_1/high_rate/sig_count_hi',\n",
      "                  'profile_2/high_rate/sig_count_hi',\n",
      "                  'profile_3/high_rate/sig_count_hi'],\n",
      " 'sig_count_low': ['profile_1/high_rate/sig_count_low',\n",
      "                   'profile_2/high_rate/sig_count_low',\n",
      "                   'profile_3/high_rate/sig_count_low'],\n",
      " 'sig_count_med': ['profile_1/high_rate/sig_count_med',\n",
      "                   'profile_2/high_rate/sig_count_med',\n",
      "                   'profile_3/high_rate/sig_count_med'],\n",
      " 'sig_h_mean_hi': ['profile_1/high_rate/sig_h_mean_hi',\n",
      "                   'profile_2/high_rate/sig_h_mean_hi',\n",
      "                   'profile_3/high_rate/sig_h_mean_hi'],\n",
      " 'sig_h_mean_low': ['profile_1/high_rate/sig_h_mean_low',\n",
      "                    'profile_2/high_rate/sig_h_mean_low',\n",
      "                    'profile_3/high_rate/sig_h_mean_low'],\n",
      " 'sig_h_mean_med': ['profile_1/high_rate/sig_h_mean_med',\n",
      "                    'profile_2/high_rate/sig_h_mean_med',\n",
      "                    'profile_3/high_rate/sig_h_mean_med'],\n",
      " 'sig_h_sdev_hi': ['profile_1/high_rate/sig_h_sdev_hi',\n",
      "                   'profile_2/high_rate/sig_h_sdev_hi',\n",
      "                   'profile_3/high_rate/sig_h_sdev_hi'],\n",
      " 'sig_h_sdev_low': ['profile_1/high_rate/sig_h_sdev_low',\n",
      "                    'profile_2/high_rate/sig_h_sdev_low',\n",
      "                    'profile_3/high_rate/sig_h_sdev_low'],\n",
      " 'sig_h_sdev_med': ['profile_1/high_rate/sig_h_sdev_med',\n",
      "                    'profile_2/high_rate/sig_h_sdev_med',\n",
      "                    'profile_3/high_rate/sig_h_sdev_med'],\n",
      " 'sigma1': ['ancillary_data/atmosphere/sigma1'],\n",
      " 'sigma2': ['ancillary_data/atmosphere/sigma2'],\n",
      " 'size_threshold1': ['ancillary_data/atmosphere/size_threshold1'],\n",
      " 'size_threshold2': ['ancillary_data/atmosphere/size_threshold2'],\n",
      " 'snow_age': ['ancillary_data/atmosphere/snow_age'],\n",
      " 'snow_ice': ['profile_1/high_rate/snow_ice',\n",
      "              'profile_2/high_rate/snow_ice',\n",
      "              'profile_3/high_rate/snow_ice'],\n",
      " 'solar_azimuth': ['profile_1/high_rate/solar_azimuth',\n",
      "                   'profile_2/high_rate/solar_azimuth',\n",
      "                   'profile_3/high_rate/solar_azimuth'],\n",
      " 'solar_elevation': ['profile_1/high_rate/solar_elevation',\n",
      "                     'profile_2/high_rate/solar_elevation',\n",
      "                     'profile_3/high_rate/solar_elevation'],\n",
      " 'solar_flux': ['ancillary_data/atmosphere/solar_flux'],\n",
      " 'start_cycle': ['ancillary_data/start_cycle'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time'],\n",
      " 'start_geoseg': ['ancillary_data/start_geoseg'],\n",
      " 'start_gpssow': ['ancillary_data/start_gpssow'],\n",
      " 'start_gpsweek': ['ancillary_data/start_gpsweek'],\n",
      " 'start_orbit': ['ancillary_data/start_orbit'],\n",
      " 'start_region': ['ancillary_data/start_region'],\n",
      " 'start_rgt': ['ancillary_data/start_rgt'],\n",
      " 'surf_min': ['ancillary_data/atmosphere/surf_min'],\n",
      " 'surf_pct': ['quality_assessment/profile_1/surf_pct',\n",
      "              'quality_assessment/profile_2/surf_pct',\n",
      "              'quality_assessment/profile_3/surf_pct'],\n",
      " 'surf_refl_true': ['profile_1/high_rate/surf_refl_true',\n",
      "                    'profile_2/high_rate/surf_refl_true',\n",
      "                    'profile_3/high_rate/surf_refl_true'],\n",
      " 'surf_type': ['profile_1/high_rate/surf_type',\n",
      "               'profile_1/low_rate/surf_type',\n",
      "               'profile_2/high_rate/surf_type',\n",
      "               'profile_2/low_rate/surf_type',\n",
      "               'profile_3/high_rate/surf_type',\n",
      "               'profile_3/low_rate/surf_type'],\n",
      " 'surf_type_igbp': ['profile_1/high_rate/surf_type_igbp',\n",
      "                    'profile_2/high_rate/surf_type_igbp',\n",
      "                    'profile_3/high_rate/surf_type_igbp'],\n",
      " 'surface_bin': ['profile_1/high_rate/surface_bin',\n",
      "                 'profile_2/high_rate/surface_bin',\n",
      "                 'profile_3/high_rate/surface_bin'],\n",
      " 'surface_h_dens': ['profile_1/high_rate/surface_h_dens',\n",
      "                    'profile_2/high_rate/surface_h_dens',\n",
      "                    'profile_3/high_rate/surface_h_dens'],\n",
      " 'surface_height': ['profile_1/high_rate/surface_height',\n",
      "                    'profile_2/high_rate/surface_height',\n",
      "                    'profile_3/high_rate/surface_height'],\n",
      " 'surface_sig': ['profile_1/high_rate/surface_sig',\n",
      "                 'profile_2/high_rate/surface_sig',\n",
      "                 'profile_3/high_rate/surface_sig'],\n",
      " 'surface_signal_source': ['ancillary_data/atmosphere/surface_signal_source'],\n",
      " 'telescope_area': ['ancillary_data/atmosphere/telescope_area'],\n",
      " 'thresh_bias1': ['ancillary_data/atmosphere/thresh_bias1'],\n",
      " 'thresh_bias2': ['ancillary_data/atmosphere/thresh_bias2'],\n",
      " 'thresh_sensitivity1': ['ancillary_data/atmosphere/thresh_sensitivity1'],\n",
      " 'thresh_sensitivity2': ['ancillary_data/atmosphere/thresh_sensitivity2'],\n",
      " 'threshold_segment_length1': ['ancillary_data/atmosphere/threshold_segment_length1'],\n",
      " 'threshold_segment_length2': ['ancillary_data/atmosphere/threshold_segment_length2'],\n",
      " 'tx_pulse_energy': ['profile_1/high_rate/tx_pulse_energy',\n",
      "                     'profile_2/high_rate/tx_pulse_energy',\n",
      "                     'profile_3/high_rate/tx_pulse_energy'],\n",
      " 'version': ['ancillary_data/version']}\n"
     ]
    }
   ],
   "source": [
    "region_a.show_custom_options(dictview=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default, spatial and temporal subsetting based on your initial inputs is applied to your order unless you specify `subset=False` to `order_granules()` or `download_granules()`. Additional subsetting options must be specified as keyword arguments to the order/download functions.\n",
    "\n",
    "Although some file format conversions and reprojections are possible using the `format`, `projection`,and `projection_parameters` keywords, the rest of this tutorial will focus on variable subsetting, which is provided with the `Coverage` keyword."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### _Why do I have to provide spatial bounds even if I don't use them to subset my data order?_\n",
    "\n",
    "Because they're needed for the metadata search. The spatial information you provide is what determines which granules might contain data over your area of interest. Even if you download entire granules, you still need to provide some limits on what geographic area you'd like data for.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## About Data Variables in an Icesat2Data object\n",
    "There are two possible variable parameters associated with each ```icesat2data``` object.\n",
    "1. ```order_vars```, which is for interacting with variables during data querying, ordering, and downloading activities.\n",
    "2. ```file_vars```, which is for interacting with variables associated with local files [not yet implemented].\n",
    "\n",
    "Each variables parameter (which is actually an associated Variables class object) has methods to:\n",
    "* get available variables, either available from the NSIDC or the file (```get_avail()``` method).\n",
    "* append new variables to a wanted list (```append()``` method), allowing the user to submit a list to the NSIDC subsetter and download a smaller, reproducible dataset and/or work with a subset of the available variables in a provided file.\n",
    "* remove variables from a wanted list (```remove()``` method, NOT YET IMPLEMENTED), allowing the user to customize the list of variables they want to work with/see at a given time.\n",
    "\n",
    "Each variables instance also has a set of attributes, including ```avail``` and ```wanted``` to indicate the list of variables that is available (unmutable, or unchangeable, as it is based on the input dataset specifications or files) and the list of variables that the user would like extracted (updateable with the ```append``` and ```remove``` methods), respectively. We'll showcase the use of all of these methods and attributes below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ICESat-2 data variables\n",
    "ICESat-2 data is natively stored in a nested file format called hdf5. Much like a directory-file system on a computer, each variable (file) has a unique path through the heirarchy (directories) within the file. Thus, some variables (e.g. 'lat', 'lon') have multiple paths (one for each of the six beams in most datasets). \n",
    "\n",
    "To increase readability, some display options (2 and 3, below) show the 200+ variable + path combinations as a dictionary where the keys are variable names and the values are the paths to that variable.\n",
    "\n",
    "### Determine what variables are available\n",
    "There are multiple ways to get a complete list of available variables.\n",
    "\n",
    "1. `region_a.order_vars.avail`, a list of all valid path+variable strings\n",
    "2. `region_a.show_custom_options(dictview=True)`, all available subsetting options\n",
    "3. `region_a.order_vars.parse_var_list(region_a.order_vars.avail)`, a dictionary of variable:paths key:value pairs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ds_surf_type',\n",
       " 'ancillary_data/atlas_sdp_gps_epoch',\n",
       " 'ancillary_data/control',\n",
       " 'ancillary_data/data_end_utc',\n",
       " 'ancillary_data/data_start_utc',\n",
       " 'ancillary_data/end_cycle',\n",
       " 'ancillary_data/end_delta_time',\n",
       " 'ancillary_data/end_geoseg',\n",
       " 'ancillary_data/end_gpssow',\n",
       " 'ancillary_data/end_gpsweek',\n",
       " 'ancillary_data/end_orbit',\n",
       " 'ancillary_data/end_region',\n",
       " 'ancillary_data/end_rgt',\n",
       " 'ancillary_data/granule_end_utc',\n",
       " 'ancillary_data/granule_start_utc',\n",
       " 'ancillary_data/qa_at_interval',\n",
       " 'ancillary_data/release',\n",
       " 'ancillary_data/start_cycle',\n",
       " 'ancillary_data/start_delta_time',\n",
       " 'ancillary_data/start_geoseg',\n",
       " 'ancillary_data/start_gpssow',\n",
       " 'ancillary_data/start_gpsweek',\n",
       " 'ancillary_data/start_orbit',\n",
       " 'ancillary_data/start_region',\n",
       " 'ancillary_data/start_rgt',\n",
       " 'ancillary_data/version',\n",
       " 'ancillary_data/atmosphere/aclr_use_atlas',\n",
       " 'ancillary_data/atmosphere/alpha_day_pce1',\n",
       " 'ancillary_data/atmosphere/alpha_day_pce2',\n",
       " 'ancillary_data/atmosphere/alpha_day_pce3',\n",
       " 'ancillary_data/atmosphere/alpha_night_pce1',\n",
       " 'ancillary_data/atmosphere/alpha_night_pce2',\n",
       " 'ancillary_data/atmosphere/alpha_night_pce3',\n",
       " 'ancillary_data/atmosphere/alpha_twilight_pce1',\n",
       " 'ancillary_data/atmosphere/alpha_twilight_pce2',\n",
       " 'ancillary_data/atmosphere/alpha_twilight_pce3',\n",
       " 'ancillary_data/atmosphere/a_m1',\n",
       " 'ancillary_data/atmosphere/a_m2',\n",
       " 'ancillary_data/atmosphere/asr_cal_factor',\n",
       " 'ancillary_data/atmosphere/atlas_bandpass_fw',\n",
       " 'ancillary_data/atmosphere/atlas_tele_fov',\n",
       " 'ancillary_data/atmosphere/backg_max_solar_elev',\n",
       " 'ancillary_data/atmosphere/backg_min_solar_elev',\n",
       " 'ancillary_data/atmosphere/backg_select',\n",
       " 'ancillary_data/atmosphere/bs_extinc_backs',\n",
       " 'ancillary_data/atmosphere/bs_lay_max_size',\n",
       " 'ancillary_data/atmosphere/bs_thresh_scale',\n",
       " 'ancillary_data/atmosphere/bs_top_scale',\n",
       " 'ancillary_data/atmosphere/bs_wind_thres',\n",
       " 'ancillary_data/atmosphere/cal_bot_ht',\n",
       " 'ancillary_data/atmosphere/cal_default',\n",
       " 'ancillary_data/atmosphere/cal_lat_bound',\n",
       " 'ancillary_data/atmosphere/cal_select',\n",
       " 'ancillary_data/atmosphere/cal_top_ht',\n",
       " 'ancillary_data/atmosphere/cutoff1',\n",
       " 'ancillary_data/atmosphere/cutoff2',\n",
       " 'ancillary_data/atmosphere/detector_efficiency',\n",
       " 'ancillary_data/atmosphere/downsample1',\n",
       " 'ancillary_data/atmosphere/downsample2',\n",
       " 'ancillary_data/atmosphere/dtime_select',\n",
       " 'ancillary_data/atmosphere/grd_search_width',\n",
       " 'ancillary_data/atmosphere/layer_flag_cp1',\n",
       " 'ancillary_data/atmosphere/layer_flag_cp2',\n",
       " 'ancillary_data/atmosphere/layer_sep',\n",
       " 'ancillary_data/atmosphere/layer_thick',\n",
       " 'ancillary_data/atmosphere/lr_bsnow_fac',\n",
       " 'ancillary_data/atmosphere/max_layers',\n",
       " 'ancillary_data/atmosphere/neighborhood1',\n",
       " 'ancillary_data/atmosphere/neighborhood2',\n",
       " 'ancillary_data/atmosphere/normalization1',\n",
       " 'ancillary_data/atmosphere/normalization2',\n",
       " 'ancillary_data/atmosphere/num_passes',\n",
       " 'ancillary_data/atmosphere/phi_land',\n",
       " 'ancillary_data/atmosphere/phi_ocean',\n",
       " 'ancillary_data/atmosphere/planck_const',\n",
       " 'ancillary_data/atmosphere/proc_interval',\n",
       " 'ancillary_data/atmosphere/quantile1',\n",
       " 'ancillary_data/atmosphere/quantile2',\n",
       " 'ancillary_data/atmosphere/receiver_optical_throughput',\n",
       " 'ancillary_data/atmosphere/sigma1',\n",
       " 'ancillary_data/atmosphere/sigma2',\n",
       " 'ancillary_data/atmosphere/size_threshold1',\n",
       " 'ancillary_data/atmosphere/size_threshold2',\n",
       " 'ancillary_data/atmosphere/snow_age',\n",
       " 'ancillary_data/atmosphere/solar_flux',\n",
       " 'ancillary_data/atmosphere/surface_signal_source',\n",
       " 'ancillary_data/atmosphere/surf_min',\n",
       " 'ancillary_data/atmosphere/telescope_area',\n",
       " 'ancillary_data/atmosphere/thresh_bias1',\n",
       " 'ancillary_data/atmosphere/thresh_bias2',\n",
       " 'ancillary_data/atmosphere/threshold_segment_length1',\n",
       " 'ancillary_data/atmosphere/threshold_segment_length2',\n",
       " 'ancillary_data/atmosphere/thresh_sensitivity1',\n",
       " 'ancillary_data/atmosphere/thresh_sensitivity2',\n",
       " 'orbit_info/crossing_time',\n",
       " 'orbit_info/cycle_number',\n",
       " 'orbit_info/lan',\n",
       " 'orbit_info/orbit_number',\n",
       " 'orbit_info/rgt',\n",
       " 'orbit_info/sc_orient',\n",
       " 'orbit_info/sc_orient_time',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_counts',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_counts_reduced',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_hist_top',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_int_height',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_int_height_reduced',\n",
       " 'profile_1/bckgrd_atlas/bckgrd_rate',\n",
       " 'profile_1/bckgrd_atlas/delta_time',\n",
       " 'profile_1/bckgrd_atlas/pce_mframe_cnt',\n",
       " 'profile_1/high_rate/aclr_true',\n",
       " 'profile_1/high_rate/apparent_surf_reflec',\n",
       " 'profile_1/high_rate/asr_cloud_probability',\n",
       " 'profile_1/high_rate/backg_c',\n",
       " 'profile_1/high_rate/backg_theoret',\n",
       " 'profile_1/high_rate/beam_azimuth',\n",
       " 'profile_1/high_rate/beam_elevation',\n",
       " 'profile_1/high_rate/bsnow_con',\n",
       " 'profile_1/high_rate/bsnow_dens',\n",
       " 'profile_1/high_rate/bsnow_h',\n",
       " 'profile_1/high_rate/bsnow_h_dens',\n",
       " 'profile_1/high_rate/bsnow_intensity',\n",
       " 'profile_1/high_rate/bsnow_od',\n",
       " 'profile_1/high_rate/bsnow_psc',\n",
       " 'profile_1/high_rate/cab_prof',\n",
       " 'profile_1/high_rate/cloud_flag_asr',\n",
       " 'profile_1/high_rate/cloud_flag_atm',\n",
       " 'profile_1/high_rate/cloud_fold_flag',\n",
       " 'profile_1/high_rate/column_od_asr',\n",
       " 'profile_1/high_rate/column_od_asr_qf',\n",
       " 'profile_1/high_rate/delta_time',\n",
       " 'profile_1/high_rate/dem_flag',\n",
       " 'profile_1/high_rate/dem_h',\n",
       " 'profile_1/high_rate/density_pass1',\n",
       " 'profile_1/high_rate/density_pass2',\n",
       " 'profile_1/high_rate/ds_layers',\n",
       " 'profile_1/high_rate/ds_va_bin_h',\n",
       " 'profile_1/high_rate/dtime_fac1',\n",
       " 'profile_1/high_rate/dtime_fac2',\n",
       " 'profile_1/high_rate/latitude',\n",
       " 'profile_1/high_rate/layer_attr',\n",
       " 'profile_1/high_rate/layer_bot',\n",
       " 'profile_1/high_rate/layer_con',\n",
       " 'profile_1/high_rate/layer_conf_dens',\n",
       " 'profile_1/high_rate/layer_dens',\n",
       " 'profile_1/high_rate/layer_flag',\n",
       " 'profile_1/high_rate/layer_ib',\n",
       " 'profile_1/high_rate/layer_top',\n",
       " 'profile_1/high_rate/longitude',\n",
       " 'profile_1/high_rate/msw_flag',\n",
       " 'profile_1/high_rate/ocean_surf_reflec',\n",
       " 'profile_1/high_rate/pce_mframe_cnt',\n",
       " 'profile_1/high_rate/prof_dist_x',\n",
       " 'profile_1/high_rate/prof_dist_y',\n",
       " 'profile_1/high_rate/range_to_top',\n",
       " 'profile_1/high_rate/segment_id',\n",
       " 'profile_1/high_rate/sig_count_hi',\n",
       " 'profile_1/high_rate/sig_count_low',\n",
       " 'profile_1/high_rate/sig_count_med',\n",
       " 'profile_1/high_rate/sig_h_mean_hi',\n",
       " 'profile_1/high_rate/sig_h_mean_low',\n",
       " 'profile_1/high_rate/sig_h_mean_med',\n",
       " 'profile_1/high_rate/sig_h_sdev_hi',\n",
       " 'profile_1/high_rate/sig_h_sdev_low',\n",
       " 'profile_1/high_rate/sig_h_sdev_med',\n",
       " 'profile_1/high_rate/snow_ice',\n",
       " 'profile_1/high_rate/solar_azimuth',\n",
       " 'profile_1/high_rate/solar_elevation',\n",
       " 'profile_1/high_rate/surface_bin',\n",
       " 'profile_1/high_rate/surface_h_dens',\n",
       " 'profile_1/high_rate/surface_height',\n",
       " 'profile_1/high_rate/surface_sig',\n",
       " 'profile_1/high_rate/surf_refl_true',\n",
       " 'profile_1/high_rate/surf_type',\n",
       " 'profile_1/high_rate/surf_type_igbp',\n",
       " 'profile_1/high_rate/tx_pulse_energy',\n",
       " 'profile_1/low_rate/bsnow_con',\n",
       " 'profile_1/low_rate/bsnow_h',\n",
       " 'profile_1/low_rate/bsnow_intensity',\n",
       " 'profile_1/low_rate/bsnow_od',\n",
       " 'profile_1/low_rate/bsnow_prob',\n",
       " 'profile_1/low_rate/bsnow_psc',\n",
       " 'profile_1/low_rate/cal_c',\n",
       " 'profile_1/low_rate/delta_time',\n",
       " 'profile_1/low_rate/ds_va_bin_h',\n",
       " 'profile_1/low_rate/latitude',\n",
       " 'profile_1/low_rate/longitude',\n",
       " 'profile_1/low_rate/met_cldprs',\n",
       " 'profile_1/low_rate/met_ps',\n",
       " 'profile_1/low_rate/met_qv10m',\n",
       " 'profile_1/low_rate/met_qv2m',\n",
       " 'profile_1/low_rate/met_slp',\n",
       " 'profile_1/low_rate/met_t10m',\n",
       " 'profile_1/low_rate/met_t2m',\n",
       " 'profile_1/low_rate/met_tqi',\n",
       " 'profile_1/low_rate/met_tql',\n",
       " 'profile_1/low_rate/met_troppb',\n",
       " 'profile_1/low_rate/met_tropt',\n",
       " 'profile_1/low_rate/met_ts',\n",
       " 'profile_1/low_rate/met_u10m',\n",
       " 'profile_1/low_rate/met_u2m',\n",
       " 'profile_1/low_rate/met_u50m',\n",
       " 'profile_1/low_rate/met_v10m',\n",
       " 'profile_1/low_rate/met_v2m',\n",
       " 'profile_1/low_rate/met_v50m',\n",
       " 'profile_1/low_rate/mol_backscatter',\n",
       " 'profile_1/low_rate/mol_backs_folded',\n",
       " 'profile_1/low_rate/molec_bkscat_p',\n",
       " 'profile_1/low_rate/molec_bkscat_rh',\n",
       " 'profile_1/low_rate/molec_bkscat_t',\n",
       " 'profile_1/low_rate/molec_trans',\n",
       " 'profile_1/low_rate/surf_type',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_counts',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_counts_reduced',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_hist_top',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_int_height',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_int_height_reduced',\n",
       " 'profile_2/bckgrd_atlas/bckgrd_rate',\n",
       " 'profile_2/bckgrd_atlas/delta_time',\n",
       " 'profile_2/bckgrd_atlas/pce_mframe_cnt',\n",
       " 'profile_2/high_rate/aclr_true',\n",
       " 'profile_2/high_rate/apparent_surf_reflec',\n",
       " 'profile_2/high_rate/asr_cloud_probability',\n",
       " 'profile_2/high_rate/backg_c',\n",
       " 'profile_2/high_rate/backg_theoret',\n",
       " 'profile_2/high_rate/beam_azimuth',\n",
       " 'profile_2/high_rate/beam_elevation',\n",
       " 'profile_2/high_rate/bsnow_con',\n",
       " 'profile_2/high_rate/bsnow_dens',\n",
       " 'profile_2/high_rate/bsnow_h',\n",
       " 'profile_2/high_rate/bsnow_h_dens',\n",
       " 'profile_2/high_rate/bsnow_intensity',\n",
       " 'profile_2/high_rate/bsnow_od',\n",
       " 'profile_2/high_rate/bsnow_psc',\n",
       " 'profile_2/high_rate/cab_prof',\n",
       " 'profile_2/high_rate/cloud_flag_asr',\n",
       " 'profile_2/high_rate/cloud_flag_atm',\n",
       " 'profile_2/high_rate/cloud_fold_flag',\n",
       " 'profile_2/high_rate/column_od_asr',\n",
       " 'profile_2/high_rate/column_od_asr_qf',\n",
       " 'profile_2/high_rate/delta_time',\n",
       " 'profile_2/high_rate/dem_flag',\n",
       " 'profile_2/high_rate/dem_h',\n",
       " 'profile_2/high_rate/density_pass1',\n",
       " 'profile_2/high_rate/density_pass2',\n",
       " 'profile_2/high_rate/ds_layers',\n",
       " 'profile_2/high_rate/ds_va_bin_h',\n",
       " 'profile_2/high_rate/dtime_fac1',\n",
       " 'profile_2/high_rate/dtime_fac2',\n",
       " 'profile_2/high_rate/latitude',\n",
       " 'profile_2/high_rate/layer_attr',\n",
       " 'profile_2/high_rate/layer_bot',\n",
       " 'profile_2/high_rate/layer_con',\n",
       " 'profile_2/high_rate/layer_conf_dens',\n",
       " 'profile_2/high_rate/layer_dens',\n",
       " 'profile_2/high_rate/layer_flag',\n",
       " 'profile_2/high_rate/layer_ib',\n",
       " 'profile_2/high_rate/layer_top',\n",
       " 'profile_2/high_rate/longitude',\n",
       " 'profile_2/high_rate/msw_flag',\n",
       " 'profile_2/high_rate/ocean_surf_reflec',\n",
       " 'profile_2/high_rate/pce_mframe_cnt',\n",
       " 'profile_2/high_rate/prof_dist_x',\n",
       " 'profile_2/high_rate/prof_dist_y',\n",
       " 'profile_2/high_rate/range_to_top',\n",
       " 'profile_2/high_rate/segment_id',\n",
       " 'profile_2/high_rate/sig_count_hi',\n",
       " 'profile_2/high_rate/sig_count_low',\n",
       " 'profile_2/high_rate/sig_count_med',\n",
       " 'profile_2/high_rate/sig_h_mean_hi',\n",
       " 'profile_2/high_rate/sig_h_mean_low',\n",
       " 'profile_2/high_rate/sig_h_mean_med',\n",
       " 'profile_2/high_rate/sig_h_sdev_hi',\n",
       " 'profile_2/high_rate/sig_h_sdev_low',\n",
       " 'profile_2/high_rate/sig_h_sdev_med',\n",
       " 'profile_2/high_rate/snow_ice',\n",
       " 'profile_2/high_rate/solar_azimuth',\n",
       " 'profile_2/high_rate/solar_elevation',\n",
       " 'profile_2/high_rate/surface_bin',\n",
       " 'profile_2/high_rate/surface_h_dens',\n",
       " 'profile_2/high_rate/surface_height',\n",
       " 'profile_2/high_rate/surface_sig',\n",
       " 'profile_2/high_rate/surf_refl_true',\n",
       " 'profile_2/high_rate/surf_type',\n",
       " 'profile_2/high_rate/surf_type_igbp',\n",
       " 'profile_2/high_rate/tx_pulse_energy',\n",
       " 'profile_2/low_rate/bsnow_con',\n",
       " 'profile_2/low_rate/bsnow_h',\n",
       " 'profile_2/low_rate/bsnow_intensity',\n",
       " 'profile_2/low_rate/bsnow_od',\n",
       " 'profile_2/low_rate/bsnow_prob',\n",
       " 'profile_2/low_rate/bsnow_psc',\n",
       " 'profile_2/low_rate/cal_c',\n",
       " 'profile_2/low_rate/delta_time',\n",
       " 'profile_2/low_rate/ds_va_bin_h',\n",
       " 'profile_2/low_rate/latitude',\n",
       " 'profile_2/low_rate/longitude',\n",
       " 'profile_2/low_rate/met_cldprs',\n",
       " 'profile_2/low_rate/met_ps',\n",
       " 'profile_2/low_rate/met_qv10m',\n",
       " 'profile_2/low_rate/met_qv2m',\n",
       " 'profile_2/low_rate/met_slp',\n",
       " 'profile_2/low_rate/met_t10m',\n",
       " 'profile_2/low_rate/met_t2m',\n",
       " 'profile_2/low_rate/met_tqi',\n",
       " 'profile_2/low_rate/met_tql',\n",
       " 'profile_2/low_rate/met_troppb',\n",
       " 'profile_2/low_rate/met_tropt',\n",
       " 'profile_2/low_rate/met_ts',\n",
       " 'profile_2/low_rate/met_u10m',\n",
       " 'profile_2/low_rate/met_u2m',\n",
       " 'profile_2/low_rate/met_u50m',\n",
       " 'profile_2/low_rate/met_v10m',\n",
       " 'profile_2/low_rate/met_v2m',\n",
       " 'profile_2/low_rate/met_v50m',\n",
       " 'profile_2/low_rate/mol_backscatter',\n",
       " 'profile_2/low_rate/mol_backs_folded',\n",
       " 'profile_2/low_rate/molec_bkscat_p',\n",
       " 'profile_2/low_rate/molec_bkscat_rh',\n",
       " 'profile_2/low_rate/molec_bkscat_t',\n",
       " 'profile_2/low_rate/molec_trans',\n",
       " 'profile_2/low_rate/surf_type',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_counts',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_counts_reduced',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_hist_top',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_int_height',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_int_height_reduced',\n",
       " 'profile_3/bckgrd_atlas/bckgrd_rate',\n",
       " 'profile_3/bckgrd_atlas/delta_time',\n",
       " 'profile_3/bckgrd_atlas/pce_mframe_cnt',\n",
       " 'profile_3/high_rate/aclr_true',\n",
       " 'profile_3/high_rate/apparent_surf_reflec',\n",
       " 'profile_3/high_rate/asr_cloud_probability',\n",
       " 'profile_3/high_rate/backg_c',\n",
       " 'profile_3/high_rate/backg_theoret',\n",
       " 'profile_3/high_rate/beam_azimuth',\n",
       " 'profile_3/high_rate/beam_elevation',\n",
       " 'profile_3/high_rate/bsnow_con',\n",
       " 'profile_3/high_rate/bsnow_dens',\n",
       " 'profile_3/high_rate/bsnow_h',\n",
       " 'profile_3/high_rate/bsnow_h_dens',\n",
       " 'profile_3/high_rate/bsnow_intensity',\n",
       " 'profile_3/high_rate/bsnow_od',\n",
       " 'profile_3/high_rate/bsnow_psc',\n",
       " 'profile_3/high_rate/cab_prof',\n",
       " 'profile_3/high_rate/cloud_flag_asr',\n",
       " 'profile_3/high_rate/cloud_flag_atm',\n",
       " 'profile_3/high_rate/cloud_fold_flag',\n",
       " 'profile_3/high_rate/column_od_asr',\n",
       " 'profile_3/high_rate/column_od_asr_qf',\n",
       " 'profile_3/high_rate/delta_time',\n",
       " 'profile_3/high_rate/dem_flag',\n",
       " 'profile_3/high_rate/dem_h',\n",
       " 'profile_3/high_rate/density_pass1',\n",
       " 'profile_3/high_rate/density_pass2',\n",
       " 'profile_3/high_rate/ds_layers',\n",
       " 'profile_3/high_rate/ds_va_bin_h',\n",
       " 'profile_3/high_rate/dtime_fac1',\n",
       " 'profile_3/high_rate/dtime_fac2',\n",
       " 'profile_3/high_rate/latitude',\n",
       " 'profile_3/high_rate/layer_attr',\n",
       " 'profile_3/high_rate/layer_bot',\n",
       " 'profile_3/high_rate/layer_con',\n",
       " 'profile_3/high_rate/layer_conf_dens',\n",
       " 'profile_3/high_rate/layer_dens',\n",
       " 'profile_3/high_rate/layer_flag',\n",
       " 'profile_3/high_rate/layer_ib',\n",
       " 'profile_3/high_rate/layer_top',\n",
       " 'profile_3/high_rate/longitude',\n",
       " 'profile_3/high_rate/msw_flag',\n",
       " 'profile_3/high_rate/ocean_surf_reflec',\n",
       " 'profile_3/high_rate/pce_mframe_cnt',\n",
       " 'profile_3/high_rate/prof_dist_x',\n",
       " 'profile_3/high_rate/prof_dist_y',\n",
       " 'profile_3/high_rate/range_to_top',\n",
       " 'profile_3/high_rate/segment_id',\n",
       " 'profile_3/high_rate/sig_count_hi',\n",
       " 'profile_3/high_rate/sig_count_low',\n",
       " 'profile_3/high_rate/sig_count_med',\n",
       " 'profile_3/high_rate/sig_h_mean_hi',\n",
       " 'profile_3/high_rate/sig_h_mean_low',\n",
       " 'profile_3/high_rate/sig_h_mean_med',\n",
       " 'profile_3/high_rate/sig_h_sdev_hi',\n",
       " 'profile_3/high_rate/sig_h_sdev_low',\n",
       " 'profile_3/high_rate/sig_h_sdev_med',\n",
       " 'profile_3/high_rate/snow_ice',\n",
       " 'profile_3/high_rate/solar_azimuth',\n",
       " 'profile_3/high_rate/solar_elevation',\n",
       " 'profile_3/high_rate/surface_bin',\n",
       " 'profile_3/high_rate/surface_h_dens',\n",
       " 'profile_3/high_rate/surface_height',\n",
       " 'profile_3/high_rate/surface_sig',\n",
       " 'profile_3/high_rate/surf_refl_true',\n",
       " 'profile_3/high_rate/surf_type',\n",
       " 'profile_3/high_rate/surf_type_igbp',\n",
       " 'profile_3/high_rate/tx_pulse_energy',\n",
       " 'profile_3/low_rate/bsnow_con',\n",
       " 'profile_3/low_rate/bsnow_h',\n",
       " 'profile_3/low_rate/bsnow_intensity',\n",
       " 'profile_3/low_rate/bsnow_od',\n",
       " 'profile_3/low_rate/bsnow_prob',\n",
       " 'profile_3/low_rate/bsnow_psc',\n",
       " 'profile_3/low_rate/cal_c',\n",
       " 'profile_3/low_rate/delta_time',\n",
       " 'profile_3/low_rate/ds_va_bin_h',\n",
       " 'profile_3/low_rate/latitude',\n",
       " 'profile_3/low_rate/longitude',\n",
       " 'profile_3/low_rate/met_cldprs',\n",
       " 'profile_3/low_rate/met_ps',\n",
       " 'profile_3/low_rate/met_qv10m',\n",
       " 'profile_3/low_rate/met_qv2m',\n",
       " 'profile_3/low_rate/met_slp',\n",
       " 'profile_3/low_rate/met_t10m',\n",
       " 'profile_3/low_rate/met_t2m',\n",
       " 'profile_3/low_rate/met_tqi',\n",
       " 'profile_3/low_rate/met_tql',\n",
       " 'profile_3/low_rate/met_troppb',\n",
       " 'profile_3/low_rate/met_tropt',\n",
       " 'profile_3/low_rate/met_ts',\n",
       " 'profile_3/low_rate/met_u10m',\n",
       " 'profile_3/low_rate/met_u2m',\n",
       " 'profile_3/low_rate/met_u50m',\n",
       " 'profile_3/low_rate/met_v10m',\n",
       " 'profile_3/low_rate/met_v2m',\n",
       " 'profile_3/low_rate/met_v50m',\n",
       " 'profile_3/low_rate/mol_backscatter',\n",
       " 'profile_3/low_rate/mol_backs_folded',\n",
       " 'profile_3/low_rate/molec_bkscat_p',\n",
       " 'profile_3/low_rate/molec_bkscat_rh',\n",
       " 'profile_3/low_rate/molec_bkscat_t',\n",
       " 'profile_3/low_rate/molec_trans',\n",
       " 'profile_3/low_rate/surf_type',\n",
       " 'quality_assessment/qa_granule_fail_reason',\n",
       " 'quality_assessment/qa_granule_pass_fail',\n",
       " 'quality_assessment/profile_1/asr_avg',\n",
       " 'quality_assessment/profile_1/asr_max',\n",
       " 'quality_assessment/profile_1/asr_min',\n",
       " 'quality_assessment/profile_1/asr_std',\n",
       " 'quality_assessment/profile_1/cab_mol_avg',\n",
       " 'quality_assessment/profile_1/cld_asr_pct',\n",
       " 'quality_assessment/profile_1/cld_avg',\n",
       " 'quality_assessment/profile_1/cld_max',\n",
       " 'quality_assessment/profile_1/cld_min',\n",
       " 'quality_assessment/profile_1/cld_pct',\n",
       " 'quality_assessment/profile_1/cod_avg',\n",
       " 'quality_assessment/profile_1/cod_max',\n",
       " 'quality_assessment/profile_1/cod_min',\n",
       " 'quality_assessment/profile_1/delta_time',\n",
       " 'quality_assessment/profile_1/osr_avg',\n",
       " 'quality_assessment/profile_1/osr_max',\n",
       " 'quality_assessment/profile_1/osr_min',\n",
       " 'quality_assessment/profile_1/surf_pct',\n",
       " 'quality_assessment/profile_2/asr_avg',\n",
       " 'quality_assessment/profile_2/asr_max',\n",
       " 'quality_assessment/profile_2/asr_min',\n",
       " 'quality_assessment/profile_2/asr_std',\n",
       " 'quality_assessment/profile_2/cab_mol_avg',\n",
       " 'quality_assessment/profile_2/cld_asr_pct',\n",
       " 'quality_assessment/profile_2/cld_avg',\n",
       " 'quality_assessment/profile_2/cld_max',\n",
       " 'quality_assessment/profile_2/cld_min',\n",
       " 'quality_assessment/profile_2/cld_pct',\n",
       " 'quality_assessment/profile_2/cod_avg',\n",
       " 'quality_assessment/profile_2/cod_max',\n",
       " 'quality_assessment/profile_2/cod_min',\n",
       " 'quality_assessment/profile_2/delta_time',\n",
       " 'quality_assessment/profile_2/osr_avg',\n",
       " 'quality_assessment/profile_2/osr_max',\n",
       " 'quality_assessment/profile_2/osr_min',\n",
       " 'quality_assessment/profile_2/surf_pct',\n",
       " 'quality_assessment/profile_3/asr_avg',\n",
       " 'quality_assessment/profile_3/asr_max',\n",
       " 'quality_assessment/profile_3/asr_min',\n",
       " 'quality_assessment/profile_3/asr_std',\n",
       " 'quality_assessment/profile_3/cab_mol_avg',\n",
       " 'quality_assessment/profile_3/cld_asr_pct',\n",
       " 'quality_assessment/profile_3/cld_avg',\n",
       " 'quality_assessment/profile_3/cld_max',\n",
       " 'quality_assessment/profile_3/cld_min',\n",
       " 'quality_assessment/profile_3/cld_pct',\n",
       " 'quality_assessment/profile_3/cod_avg',\n",
       " 'quality_assessment/profile_3/cod_max',\n",
       " 'quality_assessment/profile_3/cod_min',\n",
       " 'quality_assessment/profile_3/delta_time',\n",
       " 'quality_assessment/profile_3/osr_avg',\n",
       " 'quality_assessment/profile_3/osr_max',\n",
       " 'quality_assessment/profile_3/osr_min',\n",
       " 'quality_assessment/profile_3/surf_pct']"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "region_a.order_vars.avail"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### _Why not just download all the data and subset locally? What if I need more variables/granules?_\n",
    "\n",
    "Taking advantage of the NSIDC subsetter is a great way to reduce your download size and thus your download time and the amount of storage required if you're storing your data locally during analysis. By downloading your data using `icepyx`, it is easy to go back and get additional data with the same, similar, or different parameters (e.g. you can keep the same spatial and temporal bounds but change the variable list). Related tools (`captoolkit`) will let you easily merge files if you're uncomfortable merging them during read-in for processing."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Building your wanted variable list\n",
    "\n",
    "Now that you know which variables are available for your dataset, you need to build a list of the ones you'd like included in your dataset. There are several options for generating your initial list as well as modifying it, giving the user complete control over the list submitted.\n",
    "\n",
    "The options for building your initial list are:\n",
    "1. Use a default list for the dataset (not yet fully implemented across all datasets)\n",
    "2. Provide a list of variable names\n",
    "3. Provide a list of profiles/beams or other path keywords\n",
    "\n",
    "Note: all datasets have a short list of \"mandatory\" variables/paths (containing uncertainty information) that are automatically added to any built list.\n",
    "\n",
    "Examples of using each method to build and modify your wanted variable list are below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "region_a.order_vars.wanted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'apparent_surf_reflec': ['profile_1/high_rate/apparent_surf_reflec',\n",
      "                          'profile_2/high_rate/apparent_surf_reflec',\n",
      "                          'profile_3/high_rate/apparent_surf_reflec'],\n",
      " 'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'bsnow_con': ['profile_1/high_rate/bsnow_con',\n",
      "               'profile_1/low_rate/bsnow_con',\n",
      "               'profile_2/high_rate/bsnow_con',\n",
      "               'profile_2/low_rate/bsnow_con',\n",
      "               'profile_3/high_rate/bsnow_con',\n",
      "               'profile_3/low_rate/bsnow_con'],\n",
      " 'bsnow_dens': ['profile_1/high_rate/bsnow_dens',\n",
      "                'profile_2/high_rate/bsnow_dens',\n",
      "                'profile_3/high_rate/bsnow_dens'],\n",
      " 'bsnow_h': ['profile_1/high_rate/bsnow_h',\n",
      "             'profile_1/low_rate/bsnow_h',\n",
      "             'profile_2/high_rate/bsnow_h',\n",
      "             'profile_2/low_rate/bsnow_h',\n",
      "             'profile_3/high_rate/bsnow_h',\n",
      "             'profile_3/low_rate/bsnow_h'],\n",
      " 'bsnow_od': ['profile_1/high_rate/bsnow_od',\n",
      "              'profile_1/low_rate/bsnow_od',\n",
      "              'profile_2/high_rate/bsnow_od',\n",
      "              'profile_2/low_rate/bsnow_od',\n",
      "              'profile_3/high_rate/bsnow_od',\n",
      "              'profile_3/low_rate/bsnow_od'],\n",
      " 'bsnow_psc': ['profile_1/high_rate/bsnow_psc',\n",
      "               'profile_1/low_rate/bsnow_psc',\n",
      "               'profile_2/high_rate/bsnow_psc',\n",
      "               'profile_2/low_rate/bsnow_psc',\n",
      "               'profile_3/high_rate/bsnow_psc',\n",
      "               'profile_3/low_rate/bsnow_psc'],\n",
      " 'cloud_flag_asr': ['profile_1/high_rate/cloud_flag_asr',\n",
      "                    'profile_2/high_rate/cloud_flag_asr',\n",
      "                    'profile_3/high_rate/cloud_flag_asr'],\n",
      " 'cloud_flag_atm': ['profile_1/high_rate/cloud_flag_atm',\n",
      "                    'profile_2/high_rate/cloud_flag_atm',\n",
      "                    'profile_3/high_rate/cloud_flag_atm'],\n",
      " 'cloud_fold_flag': ['profile_1/high_rate/cloud_fold_flag',\n",
      "                     'profile_2/high_rate/cloud_fold_flag',\n",
      "                     'profile_3/high_rate/cloud_fold_flag'],\n",
      " 'column_od_asr': ['profile_1/high_rate/column_od_asr',\n",
      "                   'profile_2/high_rate/column_od_asr',\n",
      "                   'profile_3/high_rate/column_od_asr'],\n",
      " 'column_od_asr_qf': ['profile_1/high_rate/column_od_asr_qf',\n",
      "                      'profile_2/high_rate/column_od_asr_qf',\n",
      "                      'profile_3/high_rate/column_od_asr_qf'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'delta_time': ['profile_1/bckgrd_atlas/delta_time',\n",
      "                'profile_1/high_rate/delta_time',\n",
      "                'profile_1/low_rate/delta_time',\n",
      "                'profile_2/bckgrd_atlas/delta_time',\n",
      "                'profile_2/high_rate/delta_time',\n",
      "                'profile_2/low_rate/delta_time',\n",
      "                'profile_3/bckgrd_atlas/delta_time',\n",
      "                'profile_3/high_rate/delta_time',\n",
      "                'profile_3/low_rate/delta_time',\n",
      "                'quality_assessment/profile_1/delta_time',\n",
      "                'quality_assessment/profile_2/delta_time',\n",
      "                'quality_assessment/profile_3/delta_time'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_2/high_rate/latitude',\n",
      "              'profile_2/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude'],\n",
      " 'layer_attr': ['profile_1/high_rate/layer_attr',\n",
      "                'profile_2/high_rate/layer_attr',\n",
      "                'profile_3/high_rate/layer_attr'],\n",
      " 'layer_bot': ['profile_1/high_rate/layer_bot',\n",
      "               'profile_2/high_rate/layer_bot',\n",
      "               'profile_3/high_rate/layer_bot'],\n",
      " 'layer_dens': ['profile_1/high_rate/layer_dens',\n",
      "                'profile_2/high_rate/layer_dens',\n",
      "                'profile_3/high_rate/layer_dens'],\n",
      " 'layer_flag': ['profile_1/high_rate/layer_flag',\n",
      "                'profile_2/high_rate/layer_flag',\n",
      "                'profile_3/high_rate/layer_flag'],\n",
      " 'layer_ib': ['profile_1/high_rate/layer_ib',\n",
      "              'profile_2/high_rate/layer_ib',\n",
      "              'profile_3/high_rate/layer_ib'],\n",
      " 'layer_top': ['profile_1/high_rate/layer_top',\n",
      "               'profile_2/high_rate/layer_top',\n",
      "               'profile_3/high_rate/layer_top'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_1/low_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_2/low_rate/longitude',\n",
      "               'profile_3/high_rate/longitude',\n",
      "               'profile_3/low_rate/longitude'],\n",
      " 'msw_flag': ['profile_1/high_rate/msw_flag',\n",
      "              'profile_2/high_rate/msw_flag',\n",
      "              'profile_3/high_rate/msw_flag'],\n",
      " 'prof_dist_x': ['profile_1/high_rate/prof_dist_x',\n",
      "                 'profile_2/high_rate/prof_dist_x',\n",
      "                 'profile_3/high_rate/prof_dist_x'],\n",
      " 'prof_dist_y': ['profile_1/high_rate/prof_dist_y',\n",
      "                 'profile_2/high_rate/prof_dist_y',\n",
      "                 'profile_3/high_rate/prof_dist_y'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(defaults=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Modifying your wanted variable list\n",
    "\n",
    "Generating and modifying your variable request list, which is stored in `region_a.order_vars.wanted`, is controlled by the `append` and `remove` functions that operate on `region_a.order_vars.wanted`. The input options to `append` are as follows (the full documentation for this function can be found by executing `help(region_a.order_vars.append)`).\n",
    "* `defaults` (default False) - include the default variable list for your dataset (not yet fully implemented for all datasets; please submit your default variable list for inclusion!)\n",
    "* `inclusive` (default True) - when you provide a variable and/or beam/keyword, include ALL combinations that include ANY of those inputs. For instance, if you want to add longitude for only profile 1, you must specify inputs to `append` as `(inclusive=False, var_list=['longitude'], beam_list=['profile_1'])`.\n",
    "* `var_list` (default None) - list of variables (entered as strings)\n",
    "* `beam_list` (default None) - list of beams/profiles (entered as strings)\n",
    "* `keyword_list` (default None) - list of keywords (entered as strings); use `keyword_list=['']` to obtain a list of available keywords\n",
    "\n",
    "Similarly, the options for `remove` are:\n",
    "* `all` (default False) - reset `region_a.order_vars.wanted` to None\n",
    "* `inclusive` (as above)\n",
    "* `var_list` (as above)\n",
    "* `beam_list` (as above)\n",
    "* `keyword_list` (as above)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.remove(all=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Examples\n",
    "Below are a series of examples to show how you can use `append` and `remove` to modify your wanted variable list. For clarity, `region_a.order_vars.wanted` is cleared at the start of many examples. However, multiple `append` and `remove` commands can be called in succession to build your wanted variable list (see Examples x+)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 1\n",
    "Add all `latitude` and `longitude` variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_2/high_rate/latitude',\n",
      "              'profile_2/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_1/low_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_2/low_rate/longitude',\n",
      "               'profile_3/high_rate/longitude',\n",
      "               'profile_3/low_rate/longitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(defaults=False, var_list=['latitude','longitude'])\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 2:\n",
    "Add `latitude` for only `profile_1` and `profile_2`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.remove(all=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_2/high_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "var_dict = region_a.order_vars.append(beam_list=['profile_1','profile_2'],var_list=['latitude'], inclusive=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 3:\n",
    "Add `latitude` for `profile_3` and remove it for `profile_2`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(beam_list=['profile_3'],var_list=['latitude'])\n",
    "region_a.order_vars.remove(beam_list=['profile_2'], var_list=['latitude'])\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 4:\n",
    "Add `latitude` for all profiles and with keyword `low_rate`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/high_rate/latitude',\n",
      "              'profile_1/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(var_list=['latitude'],keyword_list=['low_rate'])\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 5:\n",
    "Remove `profile_1` `latitude` with keyword `high_rate` (but keep `profile_3` `latitude` with `high_rate`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/low_rate/latitude',\n",
      "              'profile_3/high_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.remove(beam_list=['profile_1'], var_list=['latitude'], keyword_list=['high_rate'], inclusive=False)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 6:\n",
    "Append `longitude` for all profiles and `high_rate` (two methods)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/low_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_3/high_rate/longitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "#Method 1\n",
    "region_a.order_vars.append(var_list=['longitude'],beam_list=['profile_1','profile_2','profile_3'],keyword_list=['high_rate'])\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/low_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_3/high_rate/longitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "#Method 2\n",
    "region_a.order_vars.append(var_list=['longitude'],keyword_list=['high_rate'], inclusive=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 7:\n",
    "Add `sc_orient_time` under `orbit_info`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'latitude': ['profile_1/low_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_3/high_rate/longitude'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'sc_orient_time': ['orbit_info/sc_orient_time'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(keyword_list=['orbit_info'],var_list=['sc_orient_time'])\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Example 8:\n",
    "Add all variables under `orbit_info` but path to `sc_orient_time` should not be duplicated."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'],\n",
      " 'crossing_time': ['orbit_info/crossing_time'],\n",
      " 'cycle_number': ['orbit_info/cycle_number'],\n",
      " 'data_end_utc': ['ancillary_data/data_end_utc'],\n",
      " 'data_start_utc': ['ancillary_data/data_start_utc'],\n",
      " 'end_delta_time': ['ancillary_data/end_delta_time'],\n",
      " 'granule_end_utc': ['ancillary_data/granule_end_utc'],\n",
      " 'granule_start_utc': ['ancillary_data/granule_start_utc'],\n",
      " 'lan': ['orbit_info/lan'],\n",
      " 'latitude': ['profile_1/low_rate/latitude',\n",
      "              'profile_3/low_rate/latitude',\n",
      "              'profile_2/low_rate/latitude'],\n",
      " 'longitude': ['profile_1/high_rate/longitude',\n",
      "               'profile_2/high_rate/longitude',\n",
      "               'profile_3/high_rate/longitude'],\n",
      " 'orbit_number': ['orbit_info/orbit_number'],\n",
      " 'rgt': ['orbit_info/rgt'],\n",
      " 'sc_orient': ['orbit_info/sc_orient'],\n",
      " 'sc_orient_time': ['orbit_info/sc_orient_time'],\n",
      " 'start_delta_time': ['ancillary_data/start_delta_time']}\n"
     ]
    }
   ],
   "source": [
    "region_a.order_vars.append(keyword_list=['orbit_info'],inclusive=True)\n",
    "pprint(region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Applying variable subsetting to your order and download\n",
    "\n",
    "In order to have your wanted variable list included with your order, you must pass it as a keyword argument to the `order_granules` or `download_granules` (which calls `order_granules` under the hood if you have not already placed your order) function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Coverage': {'sc_orient': ['orbit_info/sc_orient'], 'atlas_sdp_gps_epoch': ['ancillary_data/atlas_sdp_gps_epoch'], 'data_start_utc': ['ancillary_data/data_start_utc'], 'data_end_utc': ['ancillary_data/data_end_utc'], 'granule_start_utc': ['ancillary_data/granule_start_utc'], 'granule_end_utc': ['ancillary_data/granule_end_utc'], 'start_delta_time': ['ancillary_data/start_delta_time'], 'end_delta_time': ['ancillary_data/end_delta_time'], 'latitude': ['profile_1/low_rate/latitude', 'profile_3/low_rate/latitude', 'profile_2/low_rate/latitude'], 'longitude': ['profile_1/high_rate/longitude', 'profile_2/high_rate/longitude', 'profile_3/high_rate/longitude'], 'sc_orient_time': ['orbit_info/sc_orient_time'], 'crossing_time': ['orbit_info/crossing_time'], 'cycle_number': ['orbit_info/cycle_number'], 'lan': ['orbit_info/lan'], 'orbit_number': ['orbit_info/orbit_number'], 'rgt': ['orbit_info/rgt']}}\n",
      "[]\n",
      "order ID:  5000000666138\n",
      "Data request  1  is submitting...\n",
      "Initial request status is  pending\n",
      "Status is not complete. Trying again.\n",
      "Retry request status is:  processing\n",
      "Status is not complete. Trying again.\n",
      "Retry request status is:  processing\n",
      "Status is not complete. Trying again.\n",
      "Retry request status is:  processing\n",
      "Status is not complete. Trying again.\n",
      "Retry request status is:  complete\n"
     ]
    }
   ],
   "source": [
    "region_a.order_granules(Coverage=region_a.order_vars.wanted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beginning download of zipped output...\n",
      "Data request 5000000666138 of  1  order(s) is complete.\n"
     ]
    }
   ],
   "source": [
    "region_a.download_granules('/home/jovyan/icepyx/dev-notebooks/vardata') # <-- you do not need to include the 'Coverage' kwarg to\n",
    "                             # download if you have already submitted it with your order"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### _Why does the subsetter say no matching data was found?_\n",
    "Sometimes, chunks (granules) returned in our initial search end up not containing any data in our specified area of interest. This is because the initial search is completed using summary metadata for a chunk. You've likely encountered this before when viewing available imagery online: your spatial search turns up a bunch of images with only a few border or corner pixels, maybe even in no data regions, in your area of interest. Thus, when you go to extract the data from the area you want (i.e. spatially subset it), you don't get any usable data from that image."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check the variable list in your downloaded file\n",
    "\n",
    "Compare the available variables associated with the full dataset relative to those in your downloaded data file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "# put the full filepath to a data file here. You can get this in JupyterHub by navigating to the file,\n",
    "# right clicking, and selecting copy path. Then you can paste the path in the quotes below.\n",
    "fn = ''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Check the downloaded dataset\n",
    "Get all `latitude` variables in your downloaded file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "profile_1/low_rate/latitude\n",
      "profile_2/low_rate/latitude\n",
      "profile_3/low_rate/latitude\n"
     ]
    }
   ],
   "source": [
    "varname = 'latitude'\n",
    "\n",
    "varlist = []\n",
    "def IS2h5walk(vname, h5node):\n",
    "    if isinstance(h5node, h5py.Dataset):\n",
    "        varlist.append(vname)\n",
    "    return \n",
    "\n",
    "with h5py.File(fn,'r') as h5pt:\n",
    "    h5pt.visititems(IS2h5walk)\n",
    "    \n",
    "for tvar in varlist:\n",
    "    vpath,vn = os.path.split(tvar)\n",
    "    if vn==varname: print(tvar) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Compare to the variable paths available in the original data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['profile_1/high_rate/latitude',\n",
       " 'profile_1/low_rate/latitude',\n",
       " 'profile_2/high_rate/latitude',\n",
       " 'profile_2/low_rate/latitude',\n",
       " 'profile_3/high_rate/latitude',\n",
       " 'profile_3/low_rate/latitude']"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "region_a.order_vars.parse_var_list(region_a.order_vars.avail)[0][varname]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
